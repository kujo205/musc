generator kysely {
  provider            = "prisma-kysely"
  output              = "."
  fileName            = "db-types.d.ts"
  booleanTypeOverride = "boolean"
  decimalTypeOverride = "number"
  enumFileName        = "enums.ts"
}

datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

model Account {
  id                String  @id @default(dbgenerated("(uuid())")) @db.VarChar(36)
  userId            String  @db.VarChar(36)
  type              String  @db.VarChar(255)
  provider          String  @db.VarChar(255)
  providerAccountId String  @db.VarChar(255)
  refreshToken      String? @map("refresh_token") @db.VarChar(255)
  accessToken       String? @map("access_token") @db.VarChar(555)
  expiresAt         BigInt? @map("expires_at")
  tokenType         String? @map("token_type") @db.VarChar(255)
  scope             String? @db.VarChar(255)
  idToken           String? @map("id_token") @db.Text
  sessionState      String? @map("session_state") @db.VarChar(255)
  oauthTokenSecret  String? @map("oauth_token_secret") @db.VarChar(255)
  oauthToken        String? @map("oauth_token") @db.VarChar(255)

  @@index([userId], map: "Account_userId_index")
}

model Session {
  id           String   @id @default(dbgenerated("(uuid())")) @db.VarChar(36)
  userId       String   @db.VarChar(36)
  sessionToken String   @unique(map: "sessionToken") @db.VarChar(255)
  expires      DateTime

  @@index([userId], map: "Session_userId_index")
}

model User {
  id               String                @id @default(dbgenerated("(uuid())")) @db.VarChar(36)
  name             String?               @db.VarChar(255)
  email            String                @unique(map: "email") @db.VarChar(255)
  emailVerified    DateTime?             @default(now())
  image            String?               @db.VarChar(255)
  subscriptionType UserSubscriptionType? @default(free) @map("subscription_type")
}

model VerificationToken {
  identifier String   @db.VarChar(255)
  token      String   @unique(map: "token") @db.VarChar(255)
  expires    DateTime
}

model KyselyMigration {
  name      String @id @db.VarChar(255)
  timestamp String @db.VarChar(255)

  @@map("kysely_migration")
}

model KyselyMigrationLock {
  id       String @id @db.VarChar(255)
  isLocked Int    @default(0) @map("is_locked")

  @@map("kysely_migration_lock")
}

enum UserSubscriptionType {
  free
  paid

  @@map("User_subscription_type")
}
